// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProyectoFinal.BD;

namespace ProyectoFinal.BD.Migrations
{
    [DbContext(typeof(CentrosSaludContext))]
    [Migration("20200429192347_DatosCargados")]
    partial class DatosCargados
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ProyectoFinal.Modelos.CentroSalud", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasColumnType("nvarchar(80)")
                        .HasMaxLength(80);

                    b.Property<string>("HorarioAtencion")
                        .IsRequired()
                        .HasColumnType("nvarchar(80)")
                        .HasMaxLength(80);

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(80)")
                        .HasMaxLength(80);

                    b.Property<string>("RestriccionEdad")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<int>("Telefono")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("CentrosSalud");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Direccion = "en la loma del culo",
                            HorarioAtencion = "no trabja nunca",
                            Nombre = "Matias",
                            RestriccionEdad = "ancianas",
                            Telefono = 294
                        });
                });

            modelBuilder.Entity("ProyectoFinal.Modelos.Colectivo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Linea")
                        .IsRequired()
                        .HasColumnType("nvarchar(25)")
                        .HasMaxLength(25);

                    b.HasKey("Id");

                    b.ToTable("Colectivos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Linea = "503"
                        });
                });

            modelBuilder.Entity("ProyectoFinal.Modelos.ColectivoCentroSalud", b =>
                {
                    b.Property<int>("CentroSaludId")
                        .HasColumnType("int");

                    b.Property<int>("ColectivoId")
                        .HasColumnType("int");

                    b.HasKey("CentroSaludId", "ColectivoId");

                    b.HasIndex("ColectivoId");

                    b.ToTable("ColectivosCentrosSalud");

                    b.HasData(
                        new
                        {
                            CentroSaludId = 1,
                            ColectivoId = 1
                        });
                });

            modelBuilder.Entity("ProyectoFinal.Modelos.Especialidad", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(80)")
                        .HasMaxLength(80);

                    b.HasKey("Id");

                    b.ToTable("Especialidades");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nombre = "verdulero"
                        });
                });

            modelBuilder.Entity("ProyectoFinal.Modelos.EspecialidadCentroSalud", b =>
                {
                    b.Property<int>("CentroSaludId")
                        .HasColumnType("int");

                    b.Property<int>("EspecialidadId")
                        .HasColumnType("int");

                    b.HasKey("CentroSaludId", "EspecialidadId");

                    b.HasIndex("EspecialidadId");

                    b.ToTable("EspecialidadesCentrosSalud");

                    b.HasData(
                        new
                        {
                            CentroSaludId = 1,
                            EspecialidadId = 1
                        });
                });

            modelBuilder.Entity("ProyectoFinal.Modelos.PracticaDiagnostico", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(80)")
                        .HasMaxLength(80);

                    b.HasKey("Id");

                    b.ToTable("PracticasDiagnosticos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nombre = "prostata"
                        });
                });

            modelBuilder.Entity("ProyectoFinal.Modelos.PracticaDiagnosticoCentroSalud", b =>
                {
                    b.Property<int>("CentroSaludId")
                        .HasColumnType("int");

                    b.Property<int>("PracticaDiagnosticoId")
                        .HasColumnType("int");

                    b.HasKey("CentroSaludId", "PracticaDiagnosticoId");

                    b.HasIndex("PracticaDiagnosticoId");

                    b.ToTable("PracticasDiagnosticoCentrosSalud");

                    b.HasData(
                        new
                        {
                            CentroSaludId = 1,
                            PracticaDiagnosticoId = 1
                        });
                });

            modelBuilder.Entity("ProyectoFinal.Modelos.ColectivoCentroSalud", b =>
                {
                    b.HasOne("ProyectoFinal.Modelos.CentroSalud", "CentroSalud")
                        .WithMany("ColectivosCentroSalud")
                        .HasForeignKey("CentroSaludId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProyectoFinal.Modelos.Colectivo", "Colectivo")
                        .WithMany("ColectivosCentroSalud")
                        .HasForeignKey("ColectivoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ProyectoFinal.Modelos.EspecialidadCentroSalud", b =>
                {
                    b.HasOne("ProyectoFinal.Modelos.CentroSalud", "CentroSalud")
                        .WithMany("EspecialidadesCentroSalud")
                        .HasForeignKey("CentroSaludId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProyectoFinal.Modelos.Especialidad", "Especialidad")
                        .WithMany("EspecialidadesCentroSalud")
                        .HasForeignKey("EspecialidadId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ProyectoFinal.Modelos.PracticaDiagnosticoCentroSalud", b =>
                {
                    b.HasOne("ProyectoFinal.Modelos.CentroSalud", "CentroSalud")
                        .WithMany("PracticasDiagnosticoCentroSalud")
                        .HasForeignKey("CentroSaludId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProyectoFinal.Modelos.PracticaDiagnostico", "PracticaDiagnostico")
                        .WithMany("PracticasDiagnosticoCentroSalud")
                        .HasForeignKey("PracticaDiagnosticoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
